name: Aqua
on: pull_request
jobs:
  aqua:
    name: Aqua scanner
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Run Aqua scanner
        uses: docker://aquasec/aqua-scanner
        with:
          scan-type: 'fs'
          security-checks: 'vuln,config,secret'
          hide-progress: false
          format: 'table'
          severity: 'MEDIUM,HIGH,CRITICAL'
          # args: trivy fs --security-checks config,vuln,secret . --sast --package-json --dotnet-proj
          # To customize which severities to scan for, add the following flag: --severity UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL
          # To enable SAST scanning, add: --sast
          # To enable npm/dotnet non-lock file scanning, add: --package-json / --dotnet-proj
        env:
          AQUA_KEY: ${{ secrets.AQUA_KEY }}
          AQUA_SECRET: ${{ secrets.AQUA_SECRET }}
          GITHUB_TOKEN: ${{ github.token }}
          TRIVY_RUN_AS_PLUGIN: 'aqua'
          PACKAGE_JSON: "1"
          SAST: "1"
      - name: Manifest Generation
              run: |
                export BILLY_SERVER=https://billy.codesec.aquasec.com
                curl -sLo install.sh download.codesec.aquasec.com/billy/install.sh
                curl -sLo install.sh.checksum https://github.com/argonsecurity/releases/releases/latest/download/install.sh.checksum
                if ! cat install.sh.checksum | sha256sum ; then
                echo "install.sh checksum failed"
                exit 1
                fi
                BINDIR="." sh install.sh
                rm install.sh install.sh.checksum
                ./billy generate \
                  --access-token "${{ secrets.GITHUB_TOKEN }}" \
                  --aqua-key "${{ secrets.AQUA_KEY }}" \
                  --aqua-secret "${{ secrets.AQUA_SECRET }}" \
                  --artifact-path "aquajcampbell/grphql-vulnerable:${{ env.tag-version }}" 

                  # The docker image name:tag of the newly built image
                  # --artifact-path "my-image-name:${{ env.tag-version }}" 
                  # OR the path to the root folder of your project. I.e my-repo/my-app 
                  # --artifact-path "${{env.MY_APP_ROOT}}"
